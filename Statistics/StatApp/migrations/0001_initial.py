# Generated by Django 5.2 on 2025-05-09 19:49

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Competition',
            fields=[
                ('code', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('current_season_id', models.IntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('team_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('short_name', models.CharField(blank=True, max_length=50, null=True)),
                ('tla', models.CharField(blank=True, max_length=5, null=True)),
                ('logo_url', models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('match_id', models.IntegerField(primary_key=True, serialize=False)),
                ('matchday', models.IntegerField(blank=True, null=True)),
                ('status', models.CharField(choices=[('SCHEDULED', 'Scheduled'), ('LIVE', 'Live'), ('IN_PLAY', 'In Play'), ('PAUSED', 'Paused'), ('FINISHED', 'Finished'), ('POSTPONED', 'Postponed'), ('SUSPENDED', 'Suspended'), ('CANCELED', 'Canceled')], max_length=20)),
                ('utc_date', models.DateTimeField()),
                ('home_score', models.IntegerField(blank=True, null=True)),
                ('away_score', models.IntegerField(blank=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StatApp.competition')),
                ('away_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='StatApp.team')),
                ('home_team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='StatApp.team')),
            ],
        ),
        migrations.CreateModel(
            name='Standing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('played_games', models.IntegerField(default=0)),
                ('won', models.IntegerField(default=0)),
                ('draw', models.IntegerField(default=0)),
                ('lost', models.IntegerField(default=0)),
                ('points', models.IntegerField(default=0)),
                ('goals_for', models.IntegerField(default=0)),
                ('goals_against', models.IntegerField(default=0)),
                ('goal_difference', models.IntegerField(default=0)),
                ('group', models.CharField(blank=True, max_length=50, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StatApp.competition')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StatApp.team')),
            ],
            options={
                'unique_together': {('competition', 'team')},
            },
        ),
        migrations.CreateModel(
            name='Scorer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('player_id', models.IntegerField()),
                ('name', models.CharField(max_length=100)),
                ('goals', models.IntegerField(default=0)),
                ('assists', models.IntegerField(blank=True, default=0, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('competition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StatApp.competition')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='StatApp.team')),
            ],
            options={
                'unique_together': {('player_id', 'competition')},
            },
        ),
    ]
